// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

data source db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Leader {
  id        String      @id @default(uuid())
  email     String      @unique
  name      String
  password  String
  department Department?
  Section   Section?
  Token     Token[]

  @@map("leaders")
}

model Department {
  id       String    @id @default(uuid())
  name     String    @unique
  leaderID String    @unique
  leader   Leader    @relation(fields: [leaderID], references: [id])
  Section  Section[]

  @@map("departments")
}

model Section {
  id           String     @id @default(uuid())
  name         String     @unique
  leaderID     String     @unique
  leader       Leader     @relation(fields: [leaderID], references: [id])
  departmentID String
  department   Department @relation(fields: [departmentID], references: [id])

  @@map("sections")
}

model Token {
  id        String   @id @default(uuid())
  token     String
  userID    String
  user      Leader   @relation(fields: [userID], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@map("tokens")
}

model EducationInstitute {
  id           String         @id @default(uuid())
  name         String         @unique
  StudyProgram StudyProgram[]

  @@map("educationInstitutes")
}

model StudyProgram {
  id                  String                @id @default(uuid())
  name                String                @unique
  instituteID         String
  institute           EducationInstitute    @relation(fields: [instituteID], references: [id])
  internshipAgreement InternshipAgreement[]

  @@map("studyPrograms")
}

model Internship {
  id              String         @id @default(uuid())
  numberOfBeds    Int
  MaxCapacity     Int
  currentCapacity Int
  field           String
  yearOfStudy     Int
  TimeInterval    TimeInterval[]

  @@map("internships")
}

model TimeInterval {
  id           String     @id @default(uuid())
  startDate    DateTime
  endDate      DateTime
  internshipID String
  internship   Internship @relation(fields: [internshipID], references: [id])

  @@map("timeIntervals")
}

model Coordinator {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  @@map("coordinators")
}

model Candidate {
  id                  String                @id @default(uuid())
  name                String
  email               String                @unique
  password            String
  createdAt           DateTime              @default(now())
  internshipAgreement InternshipAgreement[]

  @@map("candidates")
}

model InternshipAgreement {
  id           String       @id @default(uuid())
  candidateID  String
  candidate    Candidate    @relation(fields: [candidateID], references: [id])
  coordinatorID String
  coordinator   StudyProgram @relation(fields: [coordinatorID], references: [id])
  startDate    DateTime
  endDate      DateTime
  status       String
  createdAt    DateTime     @default(now())
  comments     String

  @@map("internshipAgreements")
}
